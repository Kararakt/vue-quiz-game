import { vue, js, ts, sharp } from './images';

import { QuizCard, QuizItem } from '../models/models';

interface Link {
  id: number;
  title: string;
  to: string;
}

interface Checkbox {
  id: string;
  label: string;
}

export const headerLinks: Link[] = [
  {
    id: 1,
    title: 'Главная',
    to: '/',
  },
];

export const checkboxArray: Checkbox[] = [
  {
    id: 'frontend',
    label: 'Frontend',
  },
  {
    id: 'backend',
    label: 'Backend',
  },
  {
    id: 'common',
    label: 'Общие инструменты',
  },
];

export const quizCard = reactive<QuizCard[]>([
  {
    id: 'vue',
    image: vue,
    title: 'Vue.js',
    type: 'frontend',
  },
  {
    id: 'js',
    image: js,
    title: 'JavaScript',
    type: 'common',
  },
  {
    id: 'ts',
    image: ts,
    title: 'TypeScript',
    type: 'common',
  },
  {
    id: 'sharp',
    image: sharp,
    title: 'C#',
    type: 'backend',
  },
]);

export const quizVue = reactive<QuizItem[]>([
  {
    id: 1,
    question: 'Как создать новый экземпляр Vue?',
    options: ['new Vue()', 'createVueInstance()', 'initVue()', 'startVue()'],
    correctAnswer: 'new Vue()',
  },
  {
    id: 2,
    question: 'Что такое директива v-for и как ее использовать?',
    options: [
      'Она используется для рендеринга списка элементов на основе массива данных',
      'Она используется для условного рендеринга элементов',
      'Она используется для создания вычисляемых свойств',
      'Она используется для обработки событий',
    ],
    correctAnswer:
      'Она используется для рендеринга списка элементов на основе массива данных',
  },
  {
    id: 3,
    question: 'Как передать данные от родительского компонента дочернему?',
    options: ['Через props', 'Через emit', 'Через data', 'Через computed'],
    correctAnswer: 'Через props',
  },
  {
    id: 4,
    question:
      'Что такое вычисляемые свойства (computed properties) в Vue и когда их следует использовать?',
    options: [
      'Они используются для отслеживания изменений данных и автоматического обновления DOM',
      'Они используются для создания методов в экземпляре Vue',
      'Они используются для создания реактивных свойств',
      'Они используются для создания вычисляемых свойств',
    ],
    correctAnswer:
      'Они используются для отслеживания изменений данных и автоматического обновления DOM',
  },
  {
    id: 5,
    question: 'Как обработать событие во Vue?',
    options: [
      'С помощью директивы v-on',
      'С помощью директивы v-bind',
      'С помощью директивы v-model',
      'С помощью директивы v-if',
    ],
    correctAnswer: 'С помощью директивы v-on',
  },
  {
    id: 6,
    question: 'Что такое условный рендеринг в Vue и как его использовать?',
    options: [
      'Условный рендеринг используется для отображения элементов в зависимости от условия',
      'Условный рендеринг используется для создания вычисляемых свойств',
      'Условный рендеринг используется для обработки событий',
      'Условный рендеринг используется для создания реактивных свойств',
    ],
    correctAnswer:
      'Условный рендеринг используется для отображения элементов в зависимости от условия',
  },
  {
    id: 7,
    question:
      'Что такое жизненный цикл компонента во Vue и какие этапы он включает?',
    options: [
      'Это процесс создания и удаления компонентов в приложении Vue',
      'Это процесс обновления данных в компонентах Vue',
      'Это процесс управления состоянием компонентов во Vue',
      'Это процесс создания, обновления и удаления компонентов во Vue',
    ],
    correctAnswer:
      'Это процесс создания, обновления и удаления компонентов во Vue',
  },
  {
    id: 8,
    question: 'Что такое директива v-model и как ее использовать?',
    options: [
      'Она используется для условного рендеринга элементов',
      'Она используется для создания вычисляемых свойств',
      'Она используется для обработки событий',
      'Она используется для создания двусторонней привязки данных',
    ],
    correctAnswer: 'Она используется для создания двусторонней привязки данных',
  },
  {
    id: 9,
    question: 'Что такое директива v-if и в чем ее отличие от v-show?',
    options: [
      'v-if используется для условного рендеринга элементов, в то время как v-show просто переключает видимость элемента',
      'v-if и v-show выполняют одинаковые функции',
      'v-show используется для условного рендеринга элементов, в то время как v-if просто переключает видимость элемента',
      'v-if и v-show не имеют различий',
    ],
    correctAnswer:
      'v-if используется для условного рендеринга элементов, в то время как v-show просто переключает видимость элемента',
  },
  {
    id: 10,
    question: 'Что такое Vue Router и как его использовать?',
    options: [
      'Vue Router - это официальная библиотека маршрутизации для Vue.js, позволяющая создавать одностраничные приложения',
      'Vue Router - это инструмент для управления состоянием приложения во Vue.js',
      'Vue Router - это библиотека для создания анимаций во Vue.js',
      'Vue Router - это компонент для создания маршрутов во Vue.js',
    ],
    correctAnswer:
      'Vue Router - это официальная библиотека маршрутизации для Vue.js, позволяющая создавать одностраничные приложения',
  },
  {
    id: 11,
    question:
      'Что такое директива v-bind и в каких случаях ее следует использовать?',
    options: [
      'Она используется для условного рендеринга элементов',
      'Она используется для привязки атрибутов к выражениям',
      'Она используется для создания вычисляемых свойств',
      'Она используется для обработки событий',
    ],
    correctAnswer: 'Она используется для привязки атрибутов к выражениям',
  },
  {
    id: 12,
    question: 'Что такое Vuex и для чего он используется в Vue.js?',
    options: [
      'Vuex - это состояние управления состоянием для Vue.js',
      'Vuex - это система событий для Vue.js',
      'Vuex - это библиотека маршрутизации для Vue.js',
      'Vuex - это инструмент для тестирования Vue.js',
    ],
    correctAnswer: 'Vuex - это состояние управления состоянием для Vue.js',
  },
  {
    id: 13,
    question: 'Как в Vue.js задать привязку стилей к элементам?',
    options: [
      'С помощью директивы v-bind',
      'С помощью директивы v-on',
      'С помощью директивы v-if',
      'С помощью директивы v-model',
    ],
    correctAnswer: 'С помощью директивы v-bind',
  },
  {
    id: 14,
    question: 'Что такое директива v-else и как ее использовать?',
    options: [
      'Она используется в сочетании с v-if для условного рендеринга',
      'Она используется для обработки событий',
      'Она используется для привязки данных',
      'Она используется для создания вычисляемых свойств',
    ],
    correctAnswer:
      'Она используется в сочетании с v-if для условного рендеринга',
  },
  {
    id: 15,
    question: 'Что такое слоты (slots) в Vue.js?',
    options: [
      'Слоты позволяют передавать контент из родительского компонента в дочерний',
      'Слоты используются для маршрутизации',
      'Слоты используются для обработки событий',
      'Слоты позволяют создавать динамические свойства',
    ],
    correctAnswer:
      'Слоты позволяют передавать контент из родительского компонента в дочерний',
  },
  {
    id: 16,
    question: 'Что такое composables в Vue.js?',
    options: [
      'Composables позволяют повторно использовать логику между компонентами',
      'Composables позволяют создавать стили для компонентов',
      'Composables позволяют определять методы обработки событий',
      'Composables используются для условного рендеринга',
    ],
    correctAnswer:
      'Composables позволяют повторно использовать логику между компонентами',
  },
  {
    id: 17,
    question: 'Как в Vue.js использовать обработку событий между компонентами?',
    options: [
      'С помощью $emit',
      'С помощью директивы v-model',
      'С помощью computed properties',
      'С помощью Vuex',
    ],
    correctAnswer: 'С помощью $emit и $on',
  },
  {
    id: 18,
    question:
      'Что такое динамические компоненты в Vue.js и как их использовать?',
    options: [
      'Динамические компоненты позволяют менять компоненты на лету',
      'Динамические компоненты позволяют условно рендерить элементы',
      'Динамические компоненты позволяют управлять маршрутизацией',
      'Динамические компоненты позволяют обрабатывать события',
    ],
    correctAnswer:
      'Динамические компоненты позволяют менять компоненты на лету',
  },
  {
    id: 19,
    question: 'Что такое Vue CLI и для чего он используется?',
    options: [
      'Vue CLI - это инструмент для создания проектов на Vue.js',
      'Vue CLI - это инструмент для тестирования Vue.js',
      'Vue CLI - это библиотека маршрутизации для Vue.js',
      'Vue CLI - это инструмент для управления состоянием в Vue.js',
    ],
    correctAnswer: 'Vue CLI - это инструмент для создания проектов на Vue.js',
  },
  {
    id: 20,
    question: 'Что такое Scoped CSS в Vue.js и как его использовать?',
    options: [
      'Scoped CSS позволяет ограничивать стили в рамках одного компонента',
      'Scoped CSS позволяет создавать глобальные стили',
      'Scoped CSS позволяет использовать переменные CSS',
      'Scoped CSS позволяет условно применять стили',
    ],
    correctAnswer:
      'Scoped CSS позволяет ограничивать стили в рамках одного компонента',
  },
]);

export const quizJS = reactive<QuizItem[]>([]);

export const quizTS = reactive<QuizItem[]>([]);

export const quizSharp = reactive<QuizItem[]>([]);
